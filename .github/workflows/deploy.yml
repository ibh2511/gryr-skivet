name: Deploy Pages + Edge Functions

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Debug) list repo tree
      - name: List files
        run: |
          pwd
          ls -la
          echo "== find html files =="
          find . -type f -name "*.html" -print

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      # Inject __PROJECT_REF__ in ALL .html files (recursively)
      - name: Inject placeholders
        shell: bash
        env:
          PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          set -euo pipefail
          if [ -z "${PROJECT_REF:-}" ]; then
            echo "Missing SUPABASE_PROJECT_REF secret"; exit 1
          fi

          esc(){ printf '%s' "$1" | sed -e 's/[\/&\\]/\\&/g'; }
          REF_ESC="$(esc "$PROJECT_REF")"

          mapfile -t files < <(find . -type f -name "*.html")
          if [ ${#files[@]} -eq 0 ]; then
            echo "No HTML files found"; exit 1
          fi

          # Replace in-place across all html files
          for f in "${files[@]}"; do
            sed -i "s/__PROJECT_REF__/$REF_ESC/g" "$f"
            sed -i "s/__project_ref__/$REF_ESC/g" "$f" || true
          done

      # Verify & show exactly where placeholders remain (if any)
      - name: Verify replacements
        shell: bash
        run: |
          set -euo pipefail
          REMAIN=$(grep -Rn "__PROJECT_REF__\|__project_ref__" --include="*.html" . || true)
          if [ -n "$REMAIN" ]; then
            echo "::error ::Placeholder still present in files/lines below:"
            echo "$REMAIN"
            exit 1
          fi

          echo "== FN_BASE lines (sanity) =="
          grep -Rn "FN_BASE" --include="*.html" . || true

      - name: Supabase functions deploy
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          supabase link --project-ref "${{ secrets.SUPABASE_PROJECT_REF }}"
          supabase functions deploy log --no-verify-jwt
          supabase functions deploy admin --no-verify-jwt

      - name: Smoke test admin function (no auth)
        run: |
          set -euo pipefail
          curl -i -X OPTIONS \
            -H "Origin: https://ibh2511.github.io" \
            -H "Access-Control-Request-Method: POST" \
            "https://${{ secrets.SUPABASE_PROJECT_REF }}.functions.supabase.co/admin" || true
          echo "---"
          curl -i -X POST \
            -H "Origin: https://ibh2511.github.io" \
            -H "Content-Type: application/json" \
            --data '{"op":"ping"}' \
            "https://${{ secrets.SUPABASE_PROJECT_REF }}.functions.supabase.co/admin" || true

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
